name: Build and Push Docker Image to production.

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    if: ${{ github.event_name == 'release' && github.event.release.target_commitish == 'main' }}

    steps:
      - name: Imprimir variable
        run: |
          echo "El valor de la variable es: ${{ github.event_name }} + ${{ github.event.release.target_commitish }}"
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Extract tag name
        id: tag
        run: |
          # Use the release tag if workflow was triggered by release
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "TAG_NAME=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          # Use the tag provided as input if workflow was manually triggered
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "TAG_NAME=${{ github.event.inputs.tag || github.ref_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/getsweetspotcl/${{ github.event.repository.name }}:${{ steps.tag.outputs.TAG_NAME }}

      - name: Update image in k8s manifest repository
        uses: actions/checkout@v4
        with:
          repository: getsweetspotcl/infra-apps
          token: ${{ secrets.GHCR_PAT }}
          path: infra-apps

      - name: Update image tag in manifest
        run: |
          cd infra-apps/apps/${{ github.event.repository.name }}/overlays/production
          # Actualizar la imagen en el archivo de manifiesto
          sed -i 's|ghcr.io/getsweetspotcl/${{ github.event.repository.name }}:.*|ghcr.io/getsweetspotcl/${{ github.event.repository.name }}:${{ steps.tag.outputs.TAG_NAME }}|g' patch-deployment.yaml

          # Configurar Git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Commit y push de los cambios
          git add .
          git commit -m "Update ${{ github.event.repository.name }} image to ${{ steps.tag.outputs.TAG_NAME }}"
          git push
